# This is a GitHub Actions workflow file that defines your CI/CD pipeline.
# It will automatically deploy your application whenever you push to the main branch.

name: Deploy to Google Cloud

# Controls when the action will run. 
# We trigger this on pushes to the 'main' branch.
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds and pushes the Docker images to Google Artifact Registry
  build-and-push-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v5

      # Authenticate to Google Cloud using Workload Identity Federation
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v3'
        with:
          workload_identity_provider: 'projects/965244307251/locations/global/workloadIdentityPools/github-actions-main-pool/providers/github-provider'
          service_account: 'github-actions-deployer-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push the backend image
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/lrc-generator-repo/lrc-generator-backend:latest

      # Build and push the frontend image
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/lrc-generator-repo/lrc-generator-frontend:latest

  # This job deploys the application infrastructure (Cloud Run services)
  deploy-app-infrastructure:
    name: Deploy App Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-push-images # This job will only run if the images are built successfully

    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      # Checks-out your repository
      - name: Checkout repository
        uses: actions/checkout@v5

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v3'
        with:
          workload_identity_provider: 'projects/965244307251/locations/global/workloadIdentityPools/github-actions-main-pool/providers/github-provider'
          service_account: 'github-actions-deployer-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Initialize Terraform for the app infrastructure
      - name: Terraform Init (App)
        working-directory: ./terraform/app
        run: terraform init

      # Apply Terraform for the app infrastructure
      - name: Terraform Apply (App)
        working-directory: ./terraform/app
        run: terraform apply -auto-approve -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" -var="gcp_region=northamerica-south1" -var="repo_name=lrc-generator-repo" -var="domain_name=${{ secrets.DOMAIN_NAME }}" -var='common_labels={"project":"lrc-generator"}'